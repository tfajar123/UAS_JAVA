/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Content;

import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;

/**
 *
 * @author tfaja
 */
public class CreateData extends javax.swing.JPanel {
    
    public Statement st;
    public ResultSet rs;
    Connection cn = koneksi.KoneksiDB.BukaKoneksi();
    
    public CreateData() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        L_System_Check_in_Hotel = new javax.swing.JLabel();
        L_Input_data_kamar = new javax.swing.JLabel();
        L_No_kamar = new javax.swing.JLabel();
        L_Nama_tamu = new javax.swing.JLabel();
        L_Status_kamar = new javax.swing.JLabel();
        TfnoKamar = new javax.swing.JTextField();
        TfTamu = new javax.swing.JTextField();
        TfHari = new javax.swing.JTextField();
        btncheckin = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbldataKamar = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column) {
                return false;
            };
        };
        L_CheckIn = new javax.swing.JLabel();
        L_CheckOut = new javax.swing.JLabel();
        L_Total_Hari = new javax.swing.JLabel();
        jSearchStatus = new javax.swing.JButton();
        jCheckIn = new com.toedter.calendar.JDateChooser();
        jCheckOut = new com.toedter.calendar.JDateChooser();
        jTanggalStatus = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(880, 560));

        L_System_Check_in_Hotel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        L_System_Check_in_Hotel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L_System_Check_in_Hotel.setText("Check In");

        L_Input_data_kamar.setText("Input data Tamu :");

        L_No_kamar.setText("Kode Kamar");

        L_Nama_tamu.setText("Nama Tamu");

        L_Status_kamar.setText("Cari Ketersediaan Kamar:");

        TfnoKamar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TfnoKamarActionPerformed(evt);
            }
        });

        TfTamu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TfTamuActionPerformed(evt);
            }
        });

        btncheckin.setText("Check in");
        btncheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckinActionPerformed(evt);
            }
        });

        TbldataKamar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Kode Kamar", "Status", "Fasilitas", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TbldataKamar.setOpaque(false);
        jScrollPane1.setViewportView(TbldataKamar);

        L_CheckIn.setText("Check In");

        L_CheckOut.setText("Check Out");

        L_Total_Hari.setText("Total Hari");

        jSearchStatus.setText("Cari Kamar");
        jSearchStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(L_Total_Hari, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TfHari))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(L_No_kamar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L_Nama_tamu, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TfTamu))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(TfnoKamar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(btncheckin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(L_Status_kamar)
                                .addGap(18, 18, 18)
                                .addComponent(jTanggalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(jSearchStatus))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(L_CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(L_CheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(L_Input_data_kamar))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(210, 210, 210))
            .addGroup(layout.createSequentialGroup()
                .addGap(321, 321, 321)
                .addComponent(L_System_Check_in_Hotel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(307, 307, 307))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(L_System_Check_in_Hotel)
                .addGap(18, 18, 18)
                .addComponent(L_Input_data_kamar)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(L_No_kamar, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                    .addComponent(TfnoKamar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(L_Nama_tamu, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                    .addComponent(TfTamu))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(L_Total_Hari, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                    .addComponent(TfHari))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(L_CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(L_CheckOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(btncheckin)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(L_Status_kamar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTanggalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSearchStatus))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TfnoKamarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TfnoKamarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TfnoKamarActionPerformed

    private void TfTamuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TfTamuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TfTamuActionPerformed

    private void btncheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckinActionPerformed
        // TODO add your handling code here:
        String noKamarText = TfnoKamar.getText();
        String namaTamu = TfTamu.getText();
        String totalHari = TfHari.getText();
        Date checkIn = jCheckIn.getDate();
        Date checkOut = jCheckOut.getDate();
        Double hari = Double.valueOf(totalHari);
        int noKamar = Integer.parseInt(noKamarText);

        try{
            // Query untuk mengecek ketersediaan kamar
            String queryCheckAvailability = "SELECT * FROM reservasi WHERE kode_kamar = ? AND check_in <= ? AND check_out >= ?";
            PreparedStatement pstCheckAvailability;
            pstCheckAvailability = cn.prepareStatement(queryCheckAvailability);
            pstCheckAvailability.setInt(1,noKamar);
            //Konversi format
            java.sql.Date sqlCheckIn = new java.sql.Date(checkIn.getTime());
            java.sql.Date sqlCheckOut = new java.sql.Date(checkOut.getTime());
            pstCheckAvailability.setDate(2,sqlCheckOut);
            pstCheckAvailability.setDate(3,sqlCheckIn);
            ResultSet rsCheckAvailability;
            rsCheckAvailability = pstCheckAvailability.executeQuery();

            if (rsCheckAvailability.next()) {
                javax.swing.JOptionPane.showMessageDialog(null, "Kamar tidak tersedia");
            } else {
                // Query untuk mendapatkan harga
                String queryHarga = "SELECT harga FROM kamar WHERE kode_kamar = ?";
                PreparedStatement pstHarga = cn.prepareStatement(queryHarga);
                pstHarga.setInt(1, noKamar);
                ResultSet rsHarga = pstHarga.executeQuery();

                // Memeriksa apakah ada hasil
                if (rsHarga.next()) {
                    double price = rsHarga.getDouble("harga");

                    // Query untuk menyimpan data pada tabel tamu
                    String queryTamu = "INSERT INTO tamu (kode_kamar, nama) VALUES (?, ?)";
                    PreparedStatement pstTamu;
                    pstTamu = cn.prepareStatement(queryTamu, Statement.RETURN_GENERATED_KEYS);
                    pstTamu.setInt(1, noKamar);
                    pstTamu.setString(2, namaTamu);

                    // Menjalankan query pertama
                    int affectedRows = pstTamu.executeUpdate();

                    // Mendapatkan nilai id_tamu yang baru saja diinsert
                    if (affectedRows > 0) {
                        ResultSet generatedKeys = pstTamu.getGeneratedKeys();
                        if (generatedKeys.next()) {
                            int idTamu = generatedKeys.getInt(1);
                            double totalHarga = hari * price;

                            // Query untuk menyimpan data pada tabel reservasi
                            String queryReservasi = "INSERT INTO reservasi (kode_kamar, id_tamu, check_in, check_out, total_harga) VALUES (?, ?, ?, ?, ?)";
                            PreparedStatement pstReservasi;
                            pstReservasi = cn.prepareStatement(queryReservasi);
                            pstReservasi.setInt(1, noKamar);
                            pstReservasi.setInt(2, idTamu);

                            pstReservasi.setDate(3, sqlCheckIn);
                            pstReservasi.setDate(4, sqlCheckOut);
                            pstReservasi.setDouble(5, totalHarga);

                            // Menjalankan query kedua
                            pstReservasi.executeUpdate();

                            // Menutup statement reservasi
                            pstReservasi.close();
                        }
                    }
                    javax.swing.JOptionPane.showMessageDialog(null, "Reservasi Berhasil!");
                    //Hapus nilai form
                    TfnoKamar.setText("");
                    TfTamu.setText("");
                    TfHari.setText("");
                    jCheckIn.setDate(null);
                    jCheckOut.setDate(null);
                    // Menutup statement tamu dan harga
                    pstTamu.close();
                }
            }
        } catch(SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btncheckinActionPerformed

    private void jSearchStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchStatusActionPerformed

        //Ambil nilai tanggal dari form input
        Date status = jTanggalStatus.getDate();        
        java.sql.Date sqlStatus = new java.sql.Date(status.getTime());
        
        try{
            //Query untuk check ketersediaan kamar berdasarkan tanggal check in dan checkout pada kode kamar
            String queryCheckReservation = "SELECT k.id, k.kode_kamar, k.tipe_kamar, k.harga, r.check_in FROM kamar k LEFT JOIN reservasi r ON k.kode_kamar = r.kode_kamar AND ? BETWEEN r.check_in AND r.check_out;";
            PreparedStatement psStatus = cn.prepareStatement(queryCheckReservation);
            psStatus.setDate(1, sqlStatus);
            rs = psStatus.executeQuery();
            
            
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("No");
            model.addColumn("Kode Kamar");
            model.addColumn("Status");
            model.addColumn("Fasilitas");
            model.addColumn("Harga");
            
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);

            while (rs.next()) {
                // Mendapatkan nilai status_kamar dari hasil query
                String stringStatus = rs.getDate("check_in") != null ? "tidak tersedia" : "tersedia";
                Object[] data = {
                    rs.getInt("id"),
                    rs.getInt("kode_kamar"),
                    stringStatus,
                    rs.getString("tipe_kamar"),  // Menggunakan string fasilitas yang telah ditentukan
                    rs.getDouble("harga"),
                };
                model.addRow(data);
            }
            TbldataKamar.setModel(model);
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jSearchStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel L_CheckIn;
    private javax.swing.JLabel L_CheckOut;
    private javax.swing.JLabel L_Input_data_kamar;
    private javax.swing.JLabel L_Nama_tamu;
    private javax.swing.JLabel L_No_kamar;
    private javax.swing.JLabel L_Status_kamar;
    private javax.swing.JLabel L_System_Check_in_Hotel;
    private javax.swing.JLabel L_Total_Hari;
    private javax.swing.JTable TbldataKamar;
    private javax.swing.JTextField TfHari;
    private javax.swing.JTextField TfTamu;
    private javax.swing.JTextField TfnoKamar;
    private javax.swing.JButton btncheckin;
    private com.toedter.calendar.JDateChooser jCheckIn;
    private com.toedter.calendar.JDateChooser jCheckOut;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSearchStatus;
    private com.toedter.calendar.JDateChooser jTanggalStatus;
    // End of variables declaration//GEN-END:variables
}
